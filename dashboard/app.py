# dashboard/app.py (Version s√©curis√©e)

import streamlit as st
import pandas as pd
import psycopg2
import time
import os # <-- Importer la librairie pour lire les variables d'environnement

# Utiliser le cache de Streamlit pour ne pas recharger les donn√©es √† chaque interaction
@st.cache_data(ttl=60) # Rafra√Æchir les donn√©es toutes les 60 secondes
def get_data():
    """Se connecte √† la BDD Postgres en utilisant les variables d'environnement."""
    try:
        # ** LA CORRECTION **: Lire les identifiants depuis les variables d'environnement
        conn = psycopg2.connect(
            host=os.getenv("DB_HOST"),
            database=os.getenv("DB_NAME"),
            user=os.getenv("DB_USER"),
            password=os.getenv("DB_PASSWORD"),
            port=os.getenv("DB_PORT")
        )
        df = pd.read_sql("SELECT * FROM public.dim_daily_sentiment_by_source ORDER BY article_date", conn)
        return df
    except Exception as e:
        st.warning(f"En attente des donn√©es de la base... ({e})")
        return pd.DataFrame()

# --- Configuration de la page ---
st.set_page_config(page_title="Analyse de Sentiments", layout="wide")

# --- Affichage du dashboard ---
st.title("üìä Tableau de Bord - Analyse de Sentiments des Articles")
st.write("Ce tableau de bord se met √† jour automatiquement apr√®s chaque ex√©cution du pipeline Airflow.")

# Boucle pour tenter de charger les donn√©es jusqu'√† ce qu'elles soient disponibles
with st.spinner("Connexion √† la base de donn√©es..."):
    df = get_data()
    # On attend un peu pour que la base de donn√©es soit pr√™te au premier lancement
    if df.empty:
        time.sleep(5)
        df = get_data()

if df.empty:
    st.error("Impossible de charger les donn√©es. Veuillez lancer le DAG Airflow et rafra√Æchir la page.")
else:
    st.success("Donn√©es charg√©es avec succ√®s !")

    # Afficher le graphique principal
    st.subheader("√âvolution du Sentiment Moyen par Source")
    st.line_chart(df, x="article_date", y="average_sentiment", color="source_name")

    # Afficher les donn√©es brutes dans un tableau
    st.subheader("D√©tail des Donn√©es Agr√©g√©es")
    st.dataframe(df)